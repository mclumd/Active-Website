step(foo)
step(1)
add("now(1)", node(14, [now(1)], fc, [], [], 1, 1, [], [], [if]))
add("contra(X1, X2, X3) & depends_on_default(X1) -f-> depends_on_default(X2) | conclusion(reinstate(X2))", node(13, [not(contra(X5, X4, X6)), not(depends_on_default(X5)), depends_on_default(X4), conclusion(reinstate(X4))], fc, [], [], 1, 1, [[observ]], [], [fif]))
add("contra(X7, X8, X9) & depends_on_default(X8) -f-> depends_on_default(X7) | conclusion(reinstate(X7))", node(12, [not(contra(X10, X11, X12)), not(depends_on_default(X11)), depends_on_default(X10), conclusion(reinstate(X10))], fc, [], [], 1, 1, [[observ]], [], [fif]))
add("eval_bound(\+(deriv_is_defaulty(X13)), [X13]) & deriv_fringe(X14, X13) -f-> conclusion(not(depends_on_default(X14)))", node(11, [not(eval_bound(\+(deriv_is_defaulty(X16)), [X16])), not(deriv_fringe(X15, X16)), conclusion(not(depends_on_default(X15)))], fc, [], [], 1, 1, [[observ]], [], [fif]))
add("eval_bound(deriv_is_defaulty(X17), [X17]) & deriv_fringe(X18, X17) -f-> conclusion(depends_on_default(X18))", node(10, [not(eval_bound(deriv_is_defaulty(X20), [X20])), not(deriv_fringe(X19, X20)), conclusion(depends_on_default(X19))], fc, [], [], 1, 1, [[observ]], [], [fif]))
add("contra(X21, X22, X23) & eval_bound(name_to_deriv_fringe(X22, X24), [X22]) -f-> conclusion(deriv_fringe(X22, X24))", node(9, [not(contra(X27, X25, X28)), not(eval_bound(name_to_deriv_fringe(X25, X26), [X25])), conclusion(deriv_fringe(X25, X26))], fc, [], [], 1, 1, [[observ]], [], [fif]))
add("contra(X29, X30, X31) & eval_bound(name_to_deriv_fringe(X29, X32), [X29]) -f-> conclusion(deriv_fringe(X29, X32))", node(8, [not(contra(X33, X35, X36)), not(eval_bound(name_to_deriv_fringe(X33, X34), [X33])), conclusion(deriv_fringe(X33, X34))], fc, [], [], 1, 1, [[observ]], [], [fif]))
add("eval_bound(distrust_less_preferred(X37), [X37]) & applied_default(X37, X38) -f-> conclusion(X38)", node(7, [not(eval_bound(distrust_less_preferred(X40), [X40])), not(applied_default(X40, X39)), conclusion(X39)], fc, [], [], 1, 1, [[observ]], [], [fif]))
add("eval_bound(verify_applicability(X41, X42), [X41, X42]) & defcon(X41, X42) -f-> conclusion(applied_default(X41, X42))", node(6, [not(eval_bound(verify_applicability(X43, X44), [X43, X44])), not(defcon(X43, X44)), conclusion(applied_default(X43, X44))], fc, [], [], 1, 1, [[observ]], [], [fif]))
add("names(drew, p2)", node(5, [names(drew, p2)], fc, [], [], 1, 1, [[observ]], [], [if]))
add("names(ray, p1)", node(4, [names(ray, p1)], fc, [], [], 1, 1, [[observ]], [], [if]))
add("not(same(X45, X46)) | not(different(X45, X46))", node(3, [not(same(X47, X48)), not(different(X47, X48))], fc, [], [], 1, 1, [[observ]], [], [if]))
add("names(mcdermott, X49) & names(drew, X50) -f-> conclusion(same(X50, X49))", node(2, [not(names(mcdermott, X52)), not(names(drew, X51)), conclusion(same(X51, X52))], fc, [], [], 1, 1, [[observ]], [], [fif]))
add("names(reiter, X53) & names(ray, X54) -f-> conclusion(same(X54, X53))", node(1, [not(names(reiter, X56)), not(names(ray, X55)), conclusion(same(X55, X56))], fc, [], [], 1, 1, [[observ]], [], [fif]))
add("default(dndo(X57, X58))", node(0, [default(dndo(X59, X60))], fc, [], [], 1, 1, [[observ]], [], [if]))
add("names(X61, X62) & names(X63, X64) & eval_bound(\+(=(X63, X61)), [X63, X61, X64, X62]) -f-> conclusion(defcon(dndo(X63, X61), different(X64, X62)))", node(dndo(X65, X66), [not(names(X66, X68)), not(names(X65, X67)), not(eval_bound(\+(=(X65, X66)), [X65, X66, X67, X68])), conclusion(defcon(dndo(X65, X66), different(X67, X68)))], fc, [], [], 1, 1, [[observ]], [], [fif]))
end

step(2)
add("now(2)", node(17, [now(2)], fc, [], [], 2, 1, [], [], [if]))
add("defcon(dndo(drew, ray), different(p2, p1))", node(16, [defcon(dndo(drew, ray), different(p2, p1))], fc, [], [], 2, 1, [[dndo(X69, X70), 5, 4]], [], [if]))
add("defcon(dndo(ray, drew), different(p1, p2))", node(15, [defcon(dndo(ray, drew), different(p1, p2))], fc, [], [], 2, 1, [[dndo(X71, X72), 4, 5]], [], [if]))
delete("now(1)", node(14, [now(1)], fc, [], [], 1, 1, [], [], [if]))
end

step(3)
add("now(3)", node(20, [now(3)], fc, [], [], 3, 1, [], [], [if]))
add("applied_default(dndo(drew, ray), different(p2, p1))", node(19, [applied_default(dndo(drew, ray), different(p2, p1))], fc, [], [], 3, 1, [[6, 16]], [], [if]))
add("applied_default(dndo(ray, drew), different(p1, p2))", node(18, [applied_default(dndo(ray, drew), different(p1, p2))], fc, [], [], 3, 1, [[6, 15]], [], [if]))
delete("now(2)", node(17, [now(2)], fc, [], [], 2, 1, [], [], [if]))
end

step(4)
add("now(4)", node(23, [now(4)], fc, [], [], 4, 1, [], [], [if]))
add("different(p2, p1)", node(22, [different(p2, p1)], fc, [], [], 4, 1, [[7, 19]], [], [if]))
add("different(p1, p2)", node(21, [different(p1, p2)], fc, [], [], 4, 1, [[7, 18]], [], [if]))
delete("now(3)", node(20, [now(3)], fc, [], [], 3, 1, [], [], [if]))
end

step(5)
add("now(5)", node(26, [now(5)], fc, [], [], 5, 1, [], [], [if]))
add("not(same(p2, p1))", node(25, [not(same(p2, p1))], fc, [], [], 5, 1, [[22, 3]], [], [if]))
add("not(same(p1, p2))", node(24, [not(same(p1, p2))], fc, [], [], 5, 1, [[21, 3]], [], [if]))
delete("now(4)", node(23, [now(4)], fc, [], [], 4, 1, [], [], [if]))
end

step(6)
add("now(6)", node(27, [now(6)], fc, [], [], 6, 1, [], [], [if]))
delete("now(5)", node(26, [now(5)], fc, [], [], 5, 1, [], [], [if]))
end

step(7)
add("now(7)", node(28, [now(7)], fc, [], [], 7, 1, [], [], [if]))
delete("now(6)", node(27, [now(6)], fc, [], [], 6, 1, [], [], [if]))
end

step(8)
add("now(8)", node(29, [now(8)], fc, [], [], 8, 1, [], [], [if]))
delete("now(7)", node(28, [now(7)], fc, [], [], 7, 1, [], [], [if]))
end

step(9)
add("now(9)", node(30, [now(9)], fc, [], [], 9, 1, [], [], [if]))
delete("now(8)", node(29, [now(8)], fc, [], [], 8, 1, [], [], [if]))
end

step(10)
add("now(10)", node(31, [now(10)], fc, [], [], 10, 1, [], [], [if]))
delete("now(9)", node(30, [now(9)], fc, [], [], 9, 1, [], [], [if]))
end
